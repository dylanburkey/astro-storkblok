---
// src/components/navigation/Breadcrumbs.astro
interface BreadcrumbItem {
  label: string;
  href?: string;
}

interface Props {
  items: BreadcrumbItem[];
  class?: string;
}

const { items, class: className } = Astro.props;
---

<nav class:list={['breadcrumbs', className]} aria-label="Breadcrumbs">
  <ol class="breadcrumbs-list">
    {items.map((item, index) => (
      <li class="breadcrumbs-item">
        {item.href ? (
          <a href={item.href} class="breadcrumbs-link">
            {item.label}
          </a>
        ) : (
          <span class="breadcrumbs-text" aria-current="page">
            {item.label}
          </span>
        )}
        {index < items.length - 1 && (
          <svg class="breadcrumbs-separator" width="6" height="10" viewBox="0 0 6 10">
            <path d="M1 1L5 5L1 9" stroke="currentColor" fill="none" stroke-width="2" stroke-linecap="round"/>
          </svg>
        )}
      </li>
    ))}
  </ol>
</nav>

<style>
  .breadcrumbs {
    padding: var(--spacing-md) 0;
  }

  .breadcrumbs-list {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    gap: var(--spacing-xs);
    list-style: none;
    margin: 0;
    padding: 0;
  }

  .breadcrumbs-item {
    display: flex;
    align-items: center;
    gap: var(--spacing-xs);
    color: var(--color-text-muted);
  }

  .breadcrumbs-link {
    color: var(--color-text-primary);
    text-decoration: none;
    transition: color var(--transition-fast);
  }

  .breadcrumbs-link:hover {
    color: var(--color-primary);
  }

  .breadcrumbs-text {
    color: var(--color-text-muted);
  }

  .breadcrumbs-separator {
    color: var(--color-text-muted);
  }
</style>